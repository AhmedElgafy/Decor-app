// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  id        Int       @id @unique @default(autoincrement())
  name      String
  email     String    @unique
  phone     String    @unique
  birthDate DateTime
  password  String
  gender    Gender
  image     String    @default("https://res.cloudinary.com/dj1gixl83/image/upload/f_auto,q_auto/v1/Decor%20app/z3hzx5jfzeecuzx3uokj")
  createdAt DateTime  @default(now()) // Added
  cart      Cart?
  wishlist  Wishlist?
  rates     Rate[]
  orders    Order[]
}

model Category {
  id            Int           @id @unique @default(autoincrement())
  name          String
  image         String        @default("https://res.cloudinary.com/dj1gixl83/image/upload/f_auto,q_auto/v1/Decor%20app/ngega9bwqnhvyot6twux")
  createdAt     DateTime      @default(now())
  subCategories SubCategory[]
}

model SubCategory {
  id         Int       @id @unique @default(autoincrement())
  name       String
  image      String    @default("https://res.cloudinary.com/dj1gixl83/image/upload/f_auto,q_auto/v1/Decor%20app/ngega9bwqnhvyot6twux")
  createdAt  DateTime  @default(now()) // Added
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products   Product[]
}

model Product {
  id            Int            @id @unique @default(autoincrement())
  name          String
  image         String         @default("https://res.cloudinary.com/dj1gixl83/image/upload/f_auto,q_auto/v1/Decor%20app/ngega9bwqnhvyot6twux")
  price         Decimal
  description   String
  createdAt     DateTime       @default(now()) // Added
  subCategoryId Int?
  inStock       Int            @default(0)
  subCategory   SubCategory?   @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  rates         Rate[]
  cartItems     CartItem[]
  orderItems    OrderItem[]
  wishlists     Wishlist[]
  WishlistItem  WishlistItem[]
}

model Cart {
  id        Int        @id @unique @default(autoincrement())
  createdAt DateTime   @default(now())
  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int        @unique
  count     Int
  total     Decimal
  cartItems CartItem[]
}

model CartItem {
  id        Int      @id @unique @default(autoincrement())
  productId Int
  cartId    Int
  createdAt DateTime @default(now()) // Added
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  quantity  Int

  @@unique([cartId, productId])
}

model Order {
  id         Int         @id @unique @default(autoincrement())
  createdAt  DateTime    @default(now())
  userId     Int
  user       User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]
}

model OrderItem {
  id        Int      @id @unique @default(autoincrement())
  productId Int
  orderId   Int
  createdAt DateTime @default(now()) // Added
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  quantity  Int

  @@unique([orderId, productId])
}

model Wishlist {
  id           Int            @id @unique @default(autoincrement())
  createdAt    DateTime       @default(now()) // Added
  user         User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int            @unique
  products     Product[]
  WishlistItem WishlistItem[]
}

model WishlistItem {
  id         Int      @id @unique @default(autoincrement())
  productId  Int
  wishlistId Int
  createdAt  DateTime @default(now()) // Added
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id], onDelete: Cascade)

  @@unique([productId, wishlistId])
}

model Rate {
  id        Int      @id @unique @default(autoincrement())
  productId Int
  userId    Int
  rating    Int // Assuming a numeric rating value (1-5, for example)
  comment   String?
  createdAt DateTime @default(now()) // Added
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([productId, userId])
}

enum Gender {
  M
  F
}
